<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>joker0xxx3&#39;s Blog</title>
  
  <subtitle>现实告诉我： 保持好奇心，享受孤独</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://joker-vip.github.io/"/>
  <updated>2021-11-15T05:30:25.162Z</updated>
  <id>http://joker-vip.github.io/</id>
  
  <author>
    <name>joker0xxx3</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ntopng 身份验证绕过 (CVE-2021-28073)</title>
    <link href="http://joker-vip.github.io/2021/11/11/ntopng%20%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E7%BB%95%E8%BF%87%20(CVE-2021-28073)/"/>
    <id>http://joker-vip.github.io/2021/11/11/ntopng%20%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E7%BB%95%E8%BF%87%20(CVE-2021-28073)/</id>
    <published>2021-11-11T06:30:35.000Z</published>
    <updated>2021-11-15T05:30:25.162Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ntopng-身份验证绕过-CVE-2021-28073&quot;&gt;&lt;a href=&quot;#ntopng-身份验证绕过-CVE-2021-28073&quot; class=&quot;headerlink&quot; title=&quot;ntopng 身份验证绕过 (CVE-2021-28073)&quot;&gt;&lt;/a&gt;ntopng 身份验证绕过 (CVE-2021-28073)&lt;/h1&gt;&lt;p&gt;Ntopng 是一个被动的网络监控工具，专注于可以从服务器捕获的流量中获取的流量和统计信息。&lt;/p&gt;
&lt;p&gt;ntopng 4.2 及之前的版本中存在身份验证绕过漏洞。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://noahblog.360.cn/ntopng-multiple-vulnerabilities/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://noahblog.360.cn/ntopng-multiple-vulnerabilities/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="ntopng" scheme="http://joker-vip.github.io/tags/ntopng/"/>
    
  </entry>
  
  <entry>
    <title>node-postgres 代码执行漏洞（CVE-2017-16082）</title>
    <link href="http://joker-vip.github.io/2021/11/11/node-postgres%20%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2017-16082%EF%BC%89/"/>
    <id>http://joker-vip.github.io/2021/11/11/node-postgres%20%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2017-16082%EF%BC%89/</id>
    <published>2021-11-11T05:30:35.000Z</published>
    <updated>2021-11-15T05:14:44.001Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;node-postgres-代码执行漏洞（CVE-2017-16082）&quot;&gt;&lt;a href=&quot;#node-postgres-代码执行漏洞（CVE-2017-16082）&quot; class=&quot;headerlink&quot; title=&quot;node-postgres 代码执行漏洞（CVE-2017-16082）&quot;&gt;&lt;/a&gt;node-postgres 代码执行漏洞（CVE-2017-16082）&lt;/h1&gt;&lt;h2 id=&quot;漏洞原理&quot;&gt;&lt;a href=&quot;#漏洞原理&quot; class=&quot;headerlink&quot; title=&quot;漏洞原理&quot;&gt;&lt;/a&gt;漏洞原理&lt;/h2&gt;&lt;p&gt;node-postgres在处理类型为&lt;code&gt;Row Description&lt;/code&gt;的postgres返回包时，将字段名拼接到代码中。由于没有进行合理转义，导致一个特殊构造的字段名可逃逸出代码单引号限制，造成代码执行漏洞。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.leavesongs.com/PENETRATION/node-postgres-code-execution-vulnerability.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.leavesongs.com/PENETRATION/node-postgres-code-execution-vulnerability.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://node-postgres.com/announcements#2017-08-12-code-execution-vulnerability&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://node-postgres.com/announcements#2017-08-12-code-execution-vulnerability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/28575189&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://zhuanlan.zhihu.com/p/28575189&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Node.js" scheme="http://joker-vip.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Node.js 目录穿越漏洞（CVE-2017-14849）</title>
    <link href="http://joker-vip.github.io/2021/11/11/Node.js%20%E7%9B%AE%E5%BD%95%E7%A9%BF%E8%B6%8A%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2017-14849%EF%BC%89/"/>
    <id>http://joker-vip.github.io/2021/11/11/Node.js%20%E7%9B%AE%E5%BD%95%E7%A9%BF%E8%B6%8A%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2017-14849%EF%BC%89/</id>
    <published>2021-11-11T04:30:35.000Z</published>
    <updated>2021-11-15T05:13:59.333Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Node-js-目录穿越漏洞（CVE-2017-14849）&quot;&gt;&lt;a href=&quot;#Node-js-目录穿越漏洞（CVE-2017-14849）&quot; class=&quot;headerlink&quot; title=&quot;Node.js 目录穿越漏洞（CVE-2017-14849）&quot;&gt;&lt;/a&gt;Node.js 目录穿越漏洞（CVE-2017-14849）&lt;/h1&gt;&lt;h2 id=&quot;漏洞原理&quot;&gt;&lt;a href=&quot;#漏洞原理&quot; class=&quot;headerlink&quot; title=&quot;漏洞原理&quot;&gt;&lt;/a&gt;漏洞原理&lt;/h2&gt;&lt;p&gt;参考文档：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/vulnerability/september-2017-path-validation/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://nodejs.org/en/blog/vulnerability/september-2017-path-validation/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://security.tencent.com/index.php/blog/msg/121&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://security.tencent.com/index.php/blog/msg/121&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原因是 Node.js 8.5.0 对目录进行&lt;code&gt;normalize&lt;/code&gt;操作时出现了逻辑错误，导致向上层跳跃的时候（如&lt;code&gt;../../../../../../etc/passwd&lt;/code&gt;），在中间位置增加&lt;code&gt;foo/../&lt;/code&gt;（如&lt;code&gt;../../../foo/../../../../etc/passwd&lt;/code&gt;），即可使&lt;code&gt;normalize&lt;/code&gt;返回&lt;code&gt;/etc/passwd&lt;/code&gt;，但实际上正确结果应该是&lt;code&gt;../../../../../../etc/passwd&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;express这类web框架，通常会提供了静态文件服务器的功能，这些功能依赖于&lt;code&gt;normalize&lt;/code&gt;函数。比如，express在判断path是否超出静态目录范围时，就用到了&lt;code&gt;normalize&lt;/code&gt;函数，上述BUG导致&lt;code&gt;normalize&lt;/code&gt;函数返回错误结果导致绕过了检查，造成任意文件读取漏洞。&lt;/p&gt;
&lt;p&gt;当然，&lt;code&gt;normalize&lt;/code&gt;的BUG可以影响的绝非仅有express，更有待深入挖掘。不过因为这个BUG是node 8.5.0 中引入的，在 8.6 中就进行了修复，所以影响范围有限。&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Node.js" scheme="http://joker-vip.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 解析漏洞复现</title>
    <link href="http://joker-vip.github.io/2021/11/10/Nginx%20%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>http://joker-vip.github.io/2021/11/10/Nginx%20%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</id>
    <published>2021-11-10T07:30:35.000Z</published>
    <updated>2021-11-15T01:29:17.453Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Nginx-解析漏洞复现&quot;&gt;&lt;a href=&quot;#Nginx-解析漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;Nginx 解析漏洞复现&quot;&gt;&lt;/a&gt;Nginx 解析漏洞复现&lt;/h1&gt;&lt;p&gt;Nginx解析漏洞复现。&lt;/p&gt;
&lt;p&gt;版本信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nginx 1.x 最新版&lt;/li&gt;
&lt;li&gt;PHP 7.x最新版&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由此可知，该漏洞与Nginx、php版本无关，属于用户配置不当造成的解析漏洞。&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Nginx" scheme="http://joker-vip.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 配置错误导致漏洞</title>
    <link href="http://joker-vip.github.io/2021/11/10/Nginx%20%E9%85%8D%E7%BD%AE%E9%94%99%E8%AF%AF%E5%AF%BC%E8%87%B4%E6%BC%8F%E6%B4%9E/"/>
    <id>http://joker-vip.github.io/2021/11/10/Nginx%20%E9%85%8D%E7%BD%AE%E9%94%99%E8%AF%AF%E5%AF%BC%E8%87%B4%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-11-10T06:30:35.000Z</published>
    <updated>2021-11-15T01:28:09.502Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Nginx-配置错误导致漏洞&quot;&gt;&lt;a href=&quot;#Nginx-配置错误导致漏洞&quot; class=&quot;headerlink&quot; title=&quot;Nginx 配置错误导致漏洞&quot;&gt;&lt;/a&gt;Nginx 配置错误导致漏洞&lt;/h1&gt;&lt;p&gt;运行成功后，Nginx将会监听8080/8081/8082三个端口，分别对应三种漏洞。&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Nginx" scheme="http://joker-vip.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx越界读取缓存漏洞（CVE-2017-7529）</title>
    <link href="http://joker-vip.github.io/2021/11/10/Nginx%E8%B6%8A%E7%95%8C%E8%AF%BB%E5%8F%96%E7%BC%93%E5%AD%98%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2017-7529%EF%BC%89/"/>
    <id>http://joker-vip.github.io/2021/11/10/Nginx%E8%B6%8A%E7%95%8C%E8%AF%BB%E5%8F%96%E7%BC%93%E5%AD%98%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2017-7529%EF%BC%89/</id>
    <published>2021-11-10T05:30:35.000Z</published>
    <updated>2021-11-15T01:27:12.546Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Nginx越界读取缓存漏洞（CVE-2017-7529）&quot;&gt;&lt;a href=&quot;#Nginx越界读取缓存漏洞（CVE-2017-7529）&quot; class=&quot;headerlink&quot; title=&quot;Nginx越界读取缓存漏洞（CVE-2017-7529）&quot;&gt;&lt;/a&gt;Nginx越界读取缓存漏洞（CVE-2017-7529）&lt;/h1&gt;&lt;h2 id=&quot;漏洞原理&quot;&gt;&lt;a href=&quot;#漏洞原理&quot; class=&quot;headerlink&quot; title=&quot;漏洞原理&quot;&gt;&lt;/a&gt;漏洞原理&lt;/h2&gt;&lt;p&gt;参考阅读：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cert.360.cn/detailnews.html?id=b879782fbad4a7f773b6c18490d67ac7&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://cert.360.cn/detailnews.html?id=b879782fbad4a7f773b6c18490d67ac7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://galaxylab.org/cve-2017-7529-nginx整数溢出漏洞分析/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://galaxylab.org/cve-2017-7529-nginx%E6%95%B4%E6%95%B0%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Nginx" scheme="http://joker-vip.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 文件名逻辑漏洞（CVE-2013-4547）</title>
    <link href="http://joker-vip.github.io/2021/11/10/Nginx%20%E6%96%87%E4%BB%B6%E5%90%8D%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2013-4547%EF%BC%89/"/>
    <id>http://joker-vip.github.io/2021/11/10/Nginx%20%E6%96%87%E4%BB%B6%E5%90%8D%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2013-4547%EF%BC%89/</id>
    <published>2021-11-10T04:30:35.000Z</published>
    <updated>2021-11-15T01:26:18.083Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Nginx-文件名逻辑漏洞（CVE-2013-4547）&quot;&gt;&lt;a href=&quot;#Nginx-文件名逻辑漏洞（CVE-2013-4547）&quot; class=&quot;headerlink&quot; title=&quot;Nginx 文件名逻辑漏洞（CVE-2013-4547）&quot;&gt;&lt;/a&gt;Nginx 文件名逻辑漏洞（CVE-2013-4547）&lt;/h1&gt;&lt;p&gt;影响版本：Nginx 0.8.41 ~ 1.4.3 / 1.5.0 ~ 1.5.7&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-4547&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-4547&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.werner.wiki/file-resolution-vulnerability-nginx/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.werner.wiki/file-resolution-vulnerability-nginx/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.91ri.org/9064.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.91ri.org/9064.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Nginx" scheme="http://joker-vip.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Mysql 身份认证绕过漏洞（CVE-2012-2122）</title>
    <link href="http://joker-vip.github.io/2021/11/01/Mysql%20%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2012-2122%EF%BC%89/"/>
    <id>http://joker-vip.github.io/2021/11/01/Mysql%20%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2012-2122%EF%BC%89/</id>
    <published>2021-11-01T07:30:35.000Z</published>
    <updated>2021-11-01T06:53:29.429Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Mysql-身份认证绕过漏洞（CVE-2012-2122）&quot;&gt;&lt;a href=&quot;#Mysql-身份认证绕过漏洞（CVE-2012-2122）&quot; class=&quot;headerlink&quot; title=&quot;Mysql 身份认证绕过漏洞（CVE-2012-2122）&quot;&gt;&lt;/a&gt;Mysql 身份认证绕过漏洞（CVE-2012-2122）&lt;/h1&gt;&lt;p&gt;当连接MariaDB/MySQL时，输入的密码会与期望的正确密码比较，由于不正确的处理，会导致即便是memcmp()返回一个非零值，也会使MySQL认为两个密码是相同的。也就是说只要知道用户名，不断尝试就能够直接登入SQL数据库。&lt;/p&gt;
&lt;p&gt;受影响版本：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;来自 5.1.62、5.2.12、5.3.6、5.5.23 的 MariaDB 版本不是。&lt;/li&gt;
&lt;li&gt;5.1.63、5.5.24、5.6.6 的 MySQL 版本不是。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.freebuf.com/vuls/3815.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.freebuf.com/vuls/3815.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.rapid7.com/2012/06/11/cve-2012-2122-a-tragically-comedic-security-flaw-in-mysql/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.rapid7.com/2012/06/11/cve-2012-2122-a-tragically-comedic-security-flaw-in-mysql/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Mysql" scheme="http://joker-vip.github.io/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>libssh 身份验证绕过漏洞(CVE-2018-10933)</title>
    <link href="http://joker-vip.github.io/2021/11/01/libssh%20%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E(CVE-2018-10933)/"/>
    <id>http://joker-vip.github.io/2021/11/01/libssh%20%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E(CVE-2018-10933)/</id>
    <published>2021-11-01T06:30:35.000Z</published>
    <updated>2021-11-01T06:50:50.520Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;libssh-身份验证绕过漏洞-CVE-2018-10933&quot;&gt;&lt;a href=&quot;#libssh-身份验证绕过漏洞-CVE-2018-10933&quot; class=&quot;headerlink&quot; title=&quot;libssh 身份验证绕过漏洞(CVE-2018-10933)&quot;&gt;&lt;/a&gt;libssh 身份验证绕过漏洞(CVE-2018-10933)&lt;/h1&gt;&lt;p&gt;libssh 是一个在客户端和服务器端实现 SSHv2 协议的多平台 C 库。在 libssh 的服务器端状态机中发现了一个逻辑漏洞。攻击者可以&lt;code&gt;MSG_USERAUTH_SUCCESS&lt;/code&gt;在认证成功之前发送消息。这可以绕过身份验证并访问目标 SSH 服务器。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.libssh.org/security/advisories/CVE-2018-10933.txt&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.libssh.org/security/advisories/CVE-2018-10933.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.seebug.org/vuldb/ssvid-97614&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.seebug.org/vuldb/ssvid-97614&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="libssh" scheme="http://joker-vip.github.io/tags/libssh/"/>
    
  </entry>
  
  <entry>
    <title>Laravel Ignition 2.5.1 代码执行漏洞（CVE-2021-3129）</title>
    <link href="http://joker-vip.github.io/2021/11/01/Laravel%20Ignition%202.5.1%20%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2021-3129%EF%BC%89/"/>
    <id>http://joker-vip.github.io/2021/11/01/Laravel%20Ignition%202.5.1%20%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2021-3129%EF%BC%89/</id>
    <published>2021-11-01T05:30:35.000Z</published>
    <updated>2021-11-01T06:49:20.296Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Laravel-Ignition-2-5-1-代码执行漏洞（CVE-2021-3129）&quot;&gt;&lt;a href=&quot;#Laravel-Ignition-2-5-1-代码执行漏洞（CVE-2021-3129）&quot; class=&quot;headerlink&quot; title=&quot;Laravel Ignition 2.5.1 代码执行漏洞（CVE-2021-3129）&quot;&gt;&lt;/a&gt;Laravel Ignition 2.5.1 代码执行漏洞（CVE-2021-3129）&lt;/h1&gt;&lt;p&gt;Laravel是一个由Taylor Otwell所创建，免费的开源 PHP Web 框架。在开发模式下，Laravel使用了Ignition提供的错误页面，在Ignition 2.5.1及之前的版本中，有类似这样的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$contents &amp;#x3D; file_get_contents($parameters[&amp;#39;viewFile&amp;#39;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file_put_contents($parameters[&amp;#39;viewFile&amp;#39;], $contents);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;攻击者可以通过phar://协议来执行反序列化操作，进而执行任意代码。&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Laravel" scheme="http://joker-vip.github.io/tags/Laravel/"/>
    
  </entry>
  
  <entry>
    <title>Kibana 原型污染导致远程代码执行 (CVE-2019-7609)</title>
    <link href="http://joker-vip.github.io/2021/10/28/Kibana%20%E5%8E%9F%E5%9E%8B%E6%B1%A1%E6%9F%93%E5%AF%BC%E8%87%B4%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%20(CVE-2019-7609)/"/>
    <id>http://joker-vip.github.io/2021/10/28/Kibana%20%E5%8E%9F%E5%9E%8B%E6%B1%A1%E6%9F%93%E5%AF%BC%E8%87%B4%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%20(CVE-2019-7609)/</id>
    <published>2021-10-28T05:30:35.000Z</published>
    <updated>2021-10-28T05:57:04.497Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Kibana-原型污染导致远程代码执行-CVE-2019-7609&quot;&gt;&lt;a href=&quot;#Kibana-原型污染导致远程代码执行-CVE-2019-7609&quot; class=&quot;headerlink&quot; title=&quot;Kibana 原型污染导致远程代码执行 (CVE-2019-7609)&quot;&gt;&lt;/a&gt;Kibana 原型污染导致远程代码执行 (CVE-2019-7609)&lt;/h1&gt;&lt;p&gt;Kibana 是一个用于 Elasticsearch 的开源数据可视化仪表板。&lt;/p&gt;
&lt;p&gt;5.6.15 和 6.6.1 之前的 Kibana 版本在 Timelion 可视化器中包含任意代码执行缺陷。有权访问 Timelion 应用程序的攻击者可以发送尝试执行 javascript 代码的请求。这可能会导致攻击者在主机系统上使用 Kibana 进程的权限执行任意命令。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2019-7609&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://nvd.nist.gov/vuln/detail/CVE-2019-7609&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://research.securitum.com/prototype-pollution-rce-kibana-cve-2019-7609/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://research.securitum.com/prototype-pollution-rce-kibana-cve-2019-7609/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://slides.com/securitymb/prototype-pollution-in-kibana/#/4&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://slides.com/securitymb/prototype-pollution-in-kibana/#/4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Kibana" scheme="http://joker-vip.github.io/tags/Kibana/"/>
    
  </entry>
  
  <entry>
    <title>Kibana 本地文件包含 (CVE-2018-17246)</title>
    <link href="http://joker-vip.github.io/2021/10/28/Kibana%20%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%20(CVE-2018-17246)/"/>
    <id>http://joker-vip.github.io/2021/10/28/Kibana%20%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%20(CVE-2018-17246)/</id>
    <published>2021-10-28T04:30:35.000Z</published>
    <updated>2021-10-28T05:55:36.914Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Kibana-本地文件包含-CVE-2018-17246&quot;&gt;&lt;a href=&quot;#Kibana-本地文件包含-CVE-2018-17246&quot; class=&quot;headerlink&quot; title=&quot;Kibana 本地文件包含 (CVE-2018-17246)&quot;&gt;&lt;/a&gt;Kibana 本地文件包含 (CVE-2018-17246)&lt;/h1&gt;&lt;p&gt;Kibana 是一个用于 Elasticsearch 的开源数据可视化仪表板。&lt;/p&gt;
&lt;p&gt;6.4.3 和 5.6.13 之前的 Kibana 版本在控制台插件中包含任意文件包含缺陷。有权访问 Kibana 控制台 API 的攻击者可以发送尝试执行 javascript 代码的请求。这可能会导致攻击者在主机系统上使用 Kibana 进程的权限执行任意命令。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2018-17246&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://nvd.nist.gov/vuln/detail/CVE-2018-17246&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cyberark.com/threat-research-blog/execute-this-i-know-you-have-it/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cyberark.com/threat-research-blog/execute-this-i-know-you-have-it/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Kibana" scheme="http://joker-vip.github.io/tags/Kibana/"/>
    
  </entry>
  
  <entry>
    <title>Jupyter Notebook 未授权访问漏洞</title>
    <link href="http://joker-vip.github.io/2021/08/23/Jupyter%20Notebook%20%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://joker-vip.github.io/2021/08/23/Jupyter%20Notebook%20%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-08-23T08:30:35.000Z</published>
    <updated>2021-08-24T11:03:05.970Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Jupyter-Notebook-未授权访问漏洞&quot;&gt;&lt;a href=&quot;#Jupyter-Notebook-未授权访问漏洞&quot; class=&quot;headerlink&quot; title=&quot;Jupyter Notebook 未授权访问漏洞&quot;&gt;&lt;/a&gt;Jupyter Notebook 未授权访问漏洞&lt;/h1&gt;&lt;p&gt;Jupyter Notebook（此前被称为 IPython notebook）是一个交互式笔记本，支持运行 40 多种编程语言。&lt;/p&gt;
&lt;p&gt;如果管理员未为Jupyter Notebook配置密码，将导致未授权访问漏洞，游客可在其中创建一个console并执行任意Python代码和命令。&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Jupyter" scheme="http://joker-vip.github.io/tags/Jupyter/"/>
    
  </entry>
  
  <entry>
    <title>Joomla 3.7.0 (CVE-2017-8917) SQL注入漏洞</title>
    <link href="http://joker-vip.github.io/2021/08/23/Joomla%203.7.0%20(CVE-2017-8917)%20SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <id>http://joker-vip.github.io/2021/08/23/Joomla%203.7.0%20(CVE-2017-8917)%20SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-08-23T07:30:35.000Z</published>
    <updated>2021-08-24T09:07:47.303Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Joomla-3-7-0-CVE-2017-8917-SQL注入漏洞&quot;&gt;&lt;a href=&quot;#Joomla-3-7-0-CVE-2017-8917-SQL注入漏洞&quot; class=&quot;headerlink&quot; title=&quot;Joomla 3.7.0 (CVE-2017-8917) SQL注入漏洞&quot;&gt;&lt;/a&gt;Joomla 3.7.0 (CVE-2017-8917) SQL注入漏洞&lt;/h1&gt;&lt;p&gt;com_fields组件出现漏洞，com_fields组件是在3.7版本添加的，如果你使用此版本，将受到影响，并应尽快更新。这个组件可以公开访问，意味着任何能访问你站点的用户都可以发起攻击。&lt;/p&gt;
&lt;p&gt;Joomla于5月17日发布了新版本3.7.1,（&lt;a href=&quot;https://www.joomla.org/announcements/release-news/5705-joomla-3-7-1-release.html），本次更新中修复一个高危SQL注入漏洞（https://developer.joomla.org/security-centre/692-20170501-core-sql-injection.html），成功利用该漏洞后攻击者可以在未授权的情况下进行SQL注入。&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.joomla.org/announcements/release-news/5705-joomla-3-7-1-release.html），本次更新中修复一个高危SQL注入漏洞（https://developer.joomla.org/security-centre/692-20170501-core-sql-injection.html），成功利用该漏洞后攻击者可以在未授权的情况下进行SQL注入。&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Joomla" scheme="http://joker-vip.github.io/tags/Joomla/"/>
    
  </entry>
  
  <entry>
    <title>Joomla 3.4.5 反序列化漏洞（CVE-2015-8562）</title>
    <link href="http://joker-vip.github.io/2021/08/23/Joomla%203.4.5%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2015-8562%EF%BC%89/"/>
    <id>http://joker-vip.github.io/2021/08/23/Joomla%203.4.5%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2015-8562%EF%BC%89/</id>
    <published>2021-08-23T06:30:35.000Z</published>
    <updated>2021-08-24T09:07:49.547Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Joomla-3-4-5-反序列化漏洞（CVE-2015-8562）&quot;&gt;&lt;a href=&quot;#Joomla-3-4-5-反序列化漏洞（CVE-2015-8562）&quot; class=&quot;headerlink&quot; title=&quot;Joomla 3.4.5 反序列化漏洞（CVE-2015-8562）&quot;&gt;&lt;/a&gt;Joomla 3.4.5 反序列化漏洞（CVE-2015-8562）&lt;/h1&gt;&lt;p&gt;本漏洞根源是PHP5.6.13前的版本在读取存储好的session时，如果反序列化出错则会跳过当前一段数据而去反序列化下一段数据。而Joomla将session存储在Mysql数据库中，编码是utf8，当我们插入4字节的utf8数据时则会导致截断。截断后的数据在反序列化时就会失败，最后触发反序列化漏洞。&lt;/p&gt;
&lt;p&gt;通过Joomla中的Gadget，可造成任意代码执行的结果。&lt;/p&gt;
&lt;p&gt;详情可参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.leavesongs.com/PENETRATION/joomla-unserialize-code-execute-vulnerability.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.leavesongs.com/PENETRATION/joomla-unserialize-code-execute-vulnerability.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;影响版本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Joomla 1.5.x, 2.x, and 3.x before 3.4.6&lt;/li&gt;
&lt;li&gt;PHP 5.6 &amp;lt; 5.6.13, PHP 5.5 &amp;lt; 5.5.29 and PHP 5.4 &amp;lt; 5.4.45&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Joomla" scheme="http://joker-vip.github.io/tags/Joomla/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins-CI 远程代码执行漏洞（CVE-2017-1000353）</title>
    <link href="http://joker-vip.github.io/2021/08/23/Jenkins-CI%20%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2017-1000353%EF%BC%89/"/>
    <id>http://joker-vip.github.io/2021/08/23/Jenkins-CI%20%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2017-1000353%EF%BC%89/</id>
    <published>2021-08-23T05:30:35.000Z</published>
    <updated>2021-08-24T02:08:01.077Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Jenkins-CI-远程代码执行漏洞（CVE-2017-1000353）&quot;&gt;&lt;a href=&quot;#Jenkins-CI-远程代码执行漏洞（CVE-2017-1000353）&quot; class=&quot;headerlink&quot; title=&quot;Jenkins-CI 远程代码执行漏洞（CVE-2017-1000353）&quot;&gt;&lt;/a&gt;Jenkins-CI 远程代码执行漏洞（CVE-2017-1000353）&lt;/h1&gt;&lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;参考阅读 &lt;a href=&quot;https://blogs.securiteam.com/index.php/archives/3171&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blogs.securiteam.com/index.php/archives/3171&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Jenkins" scheme="http://joker-vip.github.io/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins远程命令执行漏洞（CVE-2018-1000861）</title>
    <link href="http://joker-vip.github.io/2021/08/23/Jenkins%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2018-1000861%EF%BC%89/"/>
    <id>http://joker-vip.github.io/2021/08/23/Jenkins%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2018-1000861%EF%BC%89/</id>
    <published>2021-08-23T05:30:35.000Z</published>
    <updated>2021-08-24T02:08:37.033Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Jenkins远程命令执行漏洞（CVE-2018-1000861）&quot;&gt;&lt;a href=&quot;#Jenkins远程命令执行漏洞（CVE-2018-1000861）&quot; class=&quot;headerlink&quot; title=&quot;Jenkins远程命令执行漏洞（CVE-2018-1000861）&quot;&gt;&lt;/a&gt;Jenkins远程命令执行漏洞（CVE-2018-1000861）&lt;/h1&gt;&lt;p&gt;Jenkins使用Stapler框架开发，其允许用户通过URL PATH来调用一次public方法。由于这个过程没有做限制，攻击者可以构造一些特殊的PATH来执行一些敏感的Java方法。&lt;/p&gt;
&lt;p&gt;通过这个漏洞，我们可以找到很多可供利用的利用链。其中最严重的就是绕过Groovy沙盒导致未授权用户可执行任意命令：Jenkins在沙盒中执行Groovy前会先检查脚本是否有错误，检查操作是没有沙盒的，攻击者可以通过Meta-Programming的方式，在检查这个步骤时执行任意命令。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.orange.tw/2019/01/hacking-jenkins-part-1-play-with-dynamic-routing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://blog.orange.tw/2019/01/hacking-jenkins-part-1-play-with-dynamic-routing.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.orange.tw/2019/02/abusing-meta-programming-for-unauthenticated-rce.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://blog.orange.tw/2019/02/abusing-meta-programming-for-unauthenticated-rce.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://0xdf.gitlab.io/2019/02/27/playing-with-jenkins-rce-vulnerability.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://0xdf.gitlab.io/2019/02/27/playing-with-jenkins-rce-vulnerability.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Jenkins" scheme="http://joker-vip.github.io/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>JBoss 4.x JBossMQ JMS 反序列化漏洞（CVE-2017-7504）</title>
    <link href="http://joker-vip.github.io/2021/08/23/JBoss%204.x%20JBossMQ%20JMS%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2017-7504%EF%BC%89/"/>
    <id>http://joker-vip.github.io/2021/08/23/JBoss%204.x%20JBossMQ%20JMS%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2017-7504%EF%BC%89/</id>
    <published>2021-08-23T04:30:35.000Z</published>
    <updated>2021-08-23T09:02:48.901Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JBoss-4-x-JBossMQ-JMS-反序列化漏洞（CVE-2017-7504）&quot;&gt;&lt;a href=&quot;#JBoss-4-x-JBossMQ-JMS-反序列化漏洞（CVE-2017-7504）&quot; class=&quot;headerlink&quot; title=&quot;JBoss 4.x JBossMQ JMS 反序列化漏洞（CVE-2017-7504）&quot;&gt;&lt;/a&gt;JBoss 4.x JBossMQ JMS 反序列化漏洞（CVE-2017-7504）&lt;/h1&gt;&lt;p&gt;Red Hat JBoss Application Server 是一款基于JavaEE的开源应用服务器。JBoss AS 4.x及之前版本中，JbossMQ实现过程的JMS over HTTP Invocation Layer的HTTPServerILServlet.java文件存在反序列化漏洞，远程攻击者可借助特制的序列化数据利用该漏洞执行任意代码。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/joaomatosf/JavaDeserH2HC&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/joaomatosf/JavaDeserH2HC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=jVMr4eeJ2Po&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.youtube.com/watch?v=jVMr4eeJ2Po&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="JBoss" scheme="http://joker-vip.github.io/tags/JBoss/"/>
    
  </entry>
  
  <entry>
    <title>JBoss 5.x/6.x 反序列化漏洞（CVE-2017-12149）</title>
    <link href="http://joker-vip.github.io/2021/08/17/JBoss%205.x6.x%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2017-12149%EF%BC%89/"/>
    <id>http://joker-vip.github.io/2021/08/17/JBoss%205.x6.x%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2017-12149%EF%BC%89/</id>
    <published>2021-08-17T06:30:35.000Z</published>
    <updated>2021-08-18T01:40:02.810Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JBoss-5-x-6-x-反序列化漏洞（CVE-2017-12149）&quot;&gt;&lt;a href=&quot;#JBoss-5-x-6-x-反序列化漏洞（CVE-2017-12149）&quot; class=&quot;headerlink&quot; title=&quot;JBoss 5.x/6.x 反序列化漏洞（CVE-2017-12149）&quot;&gt;&lt;/a&gt;JBoss 5.x/6.x 反序列化漏洞（CVE-2017-12149）&lt;/h1&gt;&lt;p&gt;该漏洞为 Java反序列化错误类型，存在于 Jboss 的 HttpInvoker 组件中的 ReadOnlyAccessFilter 过滤器中。该过滤器在没有进行任何安全检查的情况下尝试将来自客户端的数据流进行反序列化，从而导致了漏洞。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/zUJMt9hdGoz1TEOKy2Cgdg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mp.weixin.qq.com/s/zUJMt9hdGoz1TEOKy2Cgdg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://access.redhat.com/security/cve/cve-2017-12149&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://access.redhat.com/security/cve/cve-2017-12149&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="JBoss" scheme="http://joker-vip.github.io/tags/JBoss/"/>
    
  </entry>
  
  <entry>
    <title>JBoss JMXInvokerServlet 反序列化漏洞</title>
    <link href="http://joker-vip.github.io/2021/08/17/JBoss%20JMXInvokerServlet%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <id>http://joker-vip.github.io/2021/08/17/JBoss%20JMXInvokerServlet%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-08-17T04:30:35.000Z</published>
    <updated>2021-08-18T01:39:19.938Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JBoss-JMXInvokerServlet-反序列化漏洞&quot;&gt;&lt;a href=&quot;#JBoss-JMXInvokerServlet-反序列化漏洞&quot; class=&quot;headerlink&quot; title=&quot;JBoss JMXInvokerServlet 反序列化漏洞&quot;&gt;&lt;/a&gt;JBoss JMXInvokerServlet 反序列化漏洞&lt;/h1&gt;&lt;p&gt;这是经典的JBoss反序列化漏洞，JBoss在&lt;code&gt;/invoker/JMXInvokerServlet&lt;/code&gt;请求中读取了用户传入的对象，然后我们利用Apache Commons Collections中的Gadget执行任意代码。&lt;/p&gt;
&lt;p&gt;参考文档：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.seebug.org/vuldb/ssvid-89723&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.seebug.org/vuldb/ssvid-89723&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.freebuf.com/sectool/88908.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.freebuf.com/sectool/88908.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://paper.seebug.org/312/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://paper.seebug.org/312/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://joker-vip.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="Vulhub复现" scheme="http://joker-vip.github.io/tags/Vulhub%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="JBoss" scheme="http://joker-vip.github.io/tags/JBoss/"/>
    
  </entry>
  
</feed>
